server:
  port: ${SERVER_PORT:0}

spring:
  application:
    name: order-service
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: ${POSTGRES_SCHEMA:order_schema}
      maximum-pool-size: 4     # ou moins, selon ton trafic
      minimum-idle: 2
      connection-timeout: 20000  # 20 s
      idle-timeout: 300000       # 5 min
      max-lifetime: 1800000      # 30 min
  jpa:
    properties:
      hibernate:
        jdbc:
          time_zone: ${TIME_ZONE:GMT+01:00}
  jackson:
    time-zone: ${TIME_ZONE:GMT+01:00}

security:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS}
  jwt:
    secret: ${JWT_SECRET}
  is-ssl: ${IS_SSL}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}

management:
  endpoint:
    websocket:
      enabled: true
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics,websocket,loggers}

user:
  service-id: ${USER_SERVICE_ID:user-service}
inventory:
  service-id: ${INVENTORY_SERVICE_ID:inventory-service}